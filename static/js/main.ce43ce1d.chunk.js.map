{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","components/Loader.jsx","components/LineChart.jsx","App.js","App/store.js","index.js"],"names":["Title","Typography","Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchItem","setSearchItem","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetailsData","coinHistory","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","currentPrice","coinName","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangeList","exchanges","span","exchange","showArrow","header","marketShare","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Loader","LineChart","coinPrice","coinTimeStamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","scales","yAsis","ticks","beginAtZero","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ce43ce1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Menu, Typography, Avatar, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nconst { Title } = Typography;\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    setActiveMenu(screenSize >= 768);\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Title level={2} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Loader } from \".\";\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchItem, setSearchItem] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchItem.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchItem]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchItem(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />\n                }\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport { Loader, LineChart } from \".\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data: cryptoDetailsData, isFetching } =\n    useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  if (isFetching) return <Loader />;\n  const cryptoDetails = cryptoDetailsData?.data?.coin;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} Live Price in US dollars. View value statistics,\n          market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\n          </Col>\n          {stats.map(({ title, value, icon }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>An overview showing the stats of all cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ title, value, icon }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport { Loader } from \".\";\nimport millify from \"millify\";\nimport { Row, Col, Collapse, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangeList = data?.data?.exchanges;\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          {exchangeList.map((exchange) => (\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          ))}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsApiHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Loader } from \".\";\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  const { data: cryptosList } = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {cryptosList?.data?.coins.map((coin) => (\n              <Option value={coin.name}>{coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=\"\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Link } from \"react-router-dom\";\nimport { Cryptocurrencies, News, Loader } from \".\";\nconst { Title } = Typography;\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"Heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimeStamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimeStamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimeStamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n  const option = { scales: { yAsis: [{ ticks: { beginAtZero: true } }] } };\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} option={option} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  News,\n  Cryptocurrencies,\n  CryptoDetails,\n} from \"./components\";\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoverse <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport store from \"./App/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}